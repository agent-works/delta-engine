name: python-repl
version: 1.0.0
description: Agent with persistent Python REPL session

llm:
  model: gpt-4o
  temperature: 0.7
  max_tokens: 2000

tools:
  # Start Python REPL
  - name: python_start
    description: "Start a persistent Python interactive session (REPL). Returns a session_id."
    command: [delta-sessions, start, python3, "-i"]
    parameters: []

  # Send Python code
  - name: python_exec
    description: |
      Execute Python code in the REPL session.
      Use \\n for newline to separate statements.
      Multi-line code should end with \\n to execute.
    command: [delta-sessions, write]
    parameters:
      - name: session_id
        type: string
        description: "Session ID from python_start"
        inject_as: argument
      - name: code
        type: string
        description: "Python code to execute. Use \\n for newlines."
        inject_as: stdin

  # Read Python output
  - name: python_read
    description: "Read output from the Python REPL. Use timeout_ms to wait for results."
    command: [delta-sessions, read]
    parameters:
      - name: session_id
        type: string
        description: "Session ID"
        inject_as: argument
      - name: timeout_ms
        type: number
        description: "Wait timeout in milliseconds"
        inject_as: option
        option_name: --timeout

  # Send interrupt
  - name: python_interrupt
    description: "Send Ctrl+C to interrupt running Python code"
    command: [delta-sessions, write-key]
    parameters:
      - name: session_id
        type: string
        inject_as: argument
      - name: key
        type: string
        description: "Must be 'ctrl+c'"
        inject_as: argument

  # End session
  - name: python_end
    description: "Terminate the Python REPL session"
    command: [delta-sessions, end]
    parameters:
      - name: session_id
        type: string
        inject_as: argument
